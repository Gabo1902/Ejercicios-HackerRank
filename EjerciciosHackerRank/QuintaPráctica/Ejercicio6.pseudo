procedure run() do
  
  delimitar(entrada, "[\\s\\n]");

  crear numFilas := leerEntero();
  crear numColumnas := leerEntero();
  crear mapaOculto := crearMatriz(int)[numFilas][numColumnas];
  
  //En el mapa oculto para niños las filas y las columnas se inician desde 1
  crear filaDeInicio := leerEntero();
  crear columnaDeInicio := leerEntero();

  //Nos comemos la línea entre la info inicial y la matriz de números
    leerLinea();

  //Leer la matriz oculta
  for i = 0; i < numColumnas; i++ do 
    for j = 0; j < numColumnas; j++ do 
      mapaOculto[i][j] = leerEntero();
    end for
  end for
  revelarMapa(mapaOculto, filaDeInicio. columnaDeInicio);
end procedure

procedure void revelarMapa(mapaOculto, filaInicial, columnaInicial) do
  crear mapaRevelado := crearMatriz(char)[mapaOculto.lenght][mapaOculto[0].lenght];

  //Agregar el mar al mapa revelado
  for i = 0; i < mapaOculto.lenght; i++ do
    for j = 0; j < mapaOculto[0].lenght; j++ do
      if mapaOculto[i][j] < 0 do
        mapaRevelado[i][j] = '~';
      end if
    end for
  end for

  //Revela el camino
  crear fila := filaInicial;
  crear columna := columnaInicial;
  crear casilla := mapaOculto[fila][columna];
  crear contador := 0;
  crear haTerminadoElCamino := false;
  while haTerminadoElCamino do
    if casilla < 0 do
      println("sea"); //el camino lleva al mar
      break;
    else if (casilla/10 < 1)||(casilla/10>mapaOculto.lenght)||(casilla%10 < 1)||(casilla%10 > mapaOculto[0].lenght) do
      println("error"); //el camino se sale del mapa
      break;
    else if hayLoop(casilla, contador, mapaOculto, filaInicial, columnaInicial) do
      mapaRevelado[fila][columna] = '.';
      println("loop"); //el camino tiene un ciclo
      break;
    else if casilla == mapaOculto[fila][columna] do
      println("treasure");
      mapaRevelado[fila][columna] = 'X';
      haTerminadoElCamino = true;
    else do
      mapaRevelado[fila][columna] = '.';
      contador++;
    end if
    fila = casilla/10;
    columna = casilla%10;
    casilla = mapaOculto[fila][columna];
  end while

  //revisar si hay explosivos
  for i = 0; i < mapaOculto.lenght; i++ do
    for j = 0; j < mapaOculto[0].lenght; j++ do
      if mapaRevelado[i][j] == 'X' || mapaRevelado[i][j] == '~' do
        //do nothing
      else if mapaOculto[i][j] == mapaOculto[mapaOculto[i][j]]/10][mapaOculto[i][j]]%10] do
        print "!";
      end if
    end for
  end for

  println();

  //imprimir mapa revelado
  for i = 0; i < mapaRevelado.lenght; i++ do
    for j = 0; j < mapaRevelado[0].lenght; j++ do
      if j != mapaRevelado[0].lenght-1 do
        print(mapaRevelado[i][j]+" ");
      else do
        println(" "+mapaRevelado[i][j]);
      end if
    end for
    println();
  end for
end procedure 

//Método que me dice si hay un loop o no.
procedure boolean hayLoop(valor, contador, mapaOculto, filaInicial, columnaInicial) do
  if contador == 0 do 
    return false;
  else
    crear hayLoop := false;
    crear casillaCamino = mapaOculto[filaInicial][columnaInicial];
    for i = 0; i <= contador; i++ do
      if casillaCamino == valor do
        hayLoop = true;
        break;
      else do
        casillaAnterior = casillaCamino;
        casillaCamino = mapaOculto[casillaAnterior/10][casillaAnterior%10];  
      end if
    end for
    return hayLoop;
  end if
end procedure