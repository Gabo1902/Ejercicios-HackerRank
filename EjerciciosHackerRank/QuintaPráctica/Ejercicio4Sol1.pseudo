procedure solucion1() do 
    crear n := 3;
    crear matriz[n][n];

    crear jugadasJX := 0;
    crear jugadasJO := 0;
    crear casillasVacias := 0;

    crear multTotal := 1;
  
    //Recorra casillas y haga intercambios
    for i := 0; i <= (n-1); i++ do
        for j := 0; j <= (n-1); j++ do
            crear caracter = leerSiguienteCaracter();
            if (caracter == "X") do
                matriz[i][j] = 5
                jugadasJX++
            else if (caracter == "O") 
                matriz[i][j] = 7
                jugadasJO++
            else 
                matriz[i][j] = 0
                casillasVacias++
            end if
        end for
    end for 

    //Suma las casillas de cada fila y los multiplica por la sumas de las otras filas
    for i := 0; i <= (n-1); i++ do
        crear sumaFila := 0;
        for j := 0; j <= (n-1); j++ do
            sumaFila = sumaFila + matriz[row][col];
        end for
        multTotal = multTotal * sumaFila;
    end for

    //Suma las casillas de cada columna y los multiplica por las sumas de las otras columnas
    for j := 0; j <= (n-1); j++ do 
            crear sumaColumna = 0;
        for i := 0; i <= (n-1); i++ do
            sumaColumna := sumaColumna + matriz[row][col];
        end
        multTotal = multTotal * sumaColumna;
    end

    // Recorre diagonales
    crear sumaDiaganolDes := 0;
    crear sumaDiagonalAsc := 0;
    for k = 0; k <= (n-1); k++ do
        sumaDiaganolDes += matriz[k][k];
        sumaDiagonalAsc = sumaDiagonalAsc + matriz[n-1-k][k];
    end for

    //Este nÃºmero juzga el resultado
    multTotal = multTotal * sumaDiaganolDes * sumaDiagonalAsc;
    
    if (multTotal % (5*n)) == 0) && (multTotal % (7*n)) == 0) do
        imprimir("E")
    else if ((multTotal % (5*n)) == 0) do 
        imprimir("X")
    else if ((multTotal % (7*n)) == 0) do
        imprimir("O")
    else if (casillasVacias != 0) do
        imprimir("-")
    else do
        imprimir("=")
    end if
end